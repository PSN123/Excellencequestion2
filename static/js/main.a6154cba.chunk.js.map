{"version":3,"sources":["logo.svg","Component/Pagination.js","Component/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","showPerPage","onPageChange","total","useState","counter","setCounter","useEffect","value","className","onClick","Main","user","setUser","star","end","Paging","setPaging","getData","a","fetch","response","json","resjson","data","console","log","slice","map","currentElement","index","style","width","src","avatar","alt","first_name","email","start","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,0CCoBAA,EAlBI,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,aAClC,GAD2D,EAAZC,MACpBC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAOI,OALAC,qBAAU,WACN,IAAMC,EAAMP,EAAYI,EACxBH,EAAaM,EAAMP,EAAYO,KACjC,CAACH,IAGC,mCACA,sBAAKI,UAAU,iCAAf,UACE,wBAAQA,UAAU,kBAAkBC,QAAS,kBAAIJ,EAAWD,EAAQ,IAApE,sBACA,wBAAQI,UAAU,kBAAkBC,QAAS,kBAAIJ,EAAWD,EAAQ,IAApE,wBCuDKM,EAlEF,WAET,MAAwBP,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAAoCT,mBAAS,GAA7C,mBAAOH,EAAP,KACA,GADA,KAC0BG,mBAAS,CAC/BU,KAAK,EACLC,IAAId,KAFR,mBAAOe,EAAP,KAAcC,EAAd,KAKMC,EAAO,uCAAG,8BAAAC,EAAA,+EAEeC,MAAM,sCAFrB,cAEFC,EAFE,gBAGcA,EAASC,OAHvB,OAGFC,EAHE,OAIRV,EAAQU,EAAQC,MAChBC,QAAQC,IAAId,GALJ,kDAORa,QAAQC,IAAR,MAPQ,0DAAH,qDAWbnB,qBAAU,WACNW,MACD,IAOH,OACI,qCACA,qBAAKT,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SAEMG,EAAKe,MAAMX,EAAOF,KAAKE,EAAOD,KAAKa,KAAI,SAACC,EAAgBC,GACpD,OACI,mCAEI,qBAAKrB,UAAU,WAAf,SACA,sBAAKA,UAAU,OAAOsB,MAAO,CAACC,MAAO,SAArC,UACI,qBAAKC,IAAKJ,EAAeK,OAAQzB,UAAU,eAAe0B,IAAI,QAC9D,sBAAK1B,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BoB,EAAeO,aAC3C,mBAAG3B,UAAU,YAAb,SAA0BoB,EAAeQ,eALlBR,EAAeC,gBAkBlE,cAAC,EAAD,CACA7B,YAAaA,EACbC,aAlCe,SAACoC,EAAMvB,GACtBE,EAAU,CAACqB,MAAMA,EAAMvB,IAAIA,KAkC3BZ,MAAOS,EAAK2B,aClDLC,EATL,WACR,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6154cba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react'\r\n\r\nconst Pagination = ({showPerPage ,onPageChange,total }) => {\r\nconst [counter,setCounter]=useState(1);\r\n\r\n    useEffect(()=>{\r\n        const value=showPerPage*counter;\r\n        onPageChange(value-showPerPage,value)\r\n    },[counter])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <button className=\"btn btn-primary\" onClick={()=>setCounter(counter-1)}>Previous</button> \r\n          <button className=\"btn btn-primary\" onClick={()=>setCounter(counter+1)}>Next</button>\r\n        </div>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Pagination from '../Component/Pagination';\r\n\r\nconst Main = () => {\r\n\r\n    const [user, setUser] = useState([]);\r\n    const [showPerPage,setShowperpage] =useState(1);\r\n    const [Paging,setPaging] =useState({\r\n        star:0,\r\n        end:showPerPage,\r\n    });\r\n    \r\n    const getData = async () => {\r\n        try {\r\n            const response = await fetch(`https://reqres.in/api/users?page=1`);\r\n            const resjson = await response.json();\r\n            setUser(resjson.data);\r\n            console.log(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    const onPageChange=(start,end)=>{\r\n        setPaging({start:start,end:end})\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {\r\n                user.slice(Paging.star,Paging.end).map((currentElement, index) => {\r\n                    return (\r\n                        <>\r\n                        \r\n                            <div className=\"col-md-4\" key={currentElement.index}>\r\n                            <div className=\"card\" style={{width: '18rem'}}>\r\n                                <img src={currentElement.avatar} className=\"card-img-top\" alt=\"...\" />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{currentElement.first_name}</h5>\r\n                                    <p className=\"card-text\">{currentElement.email}</p>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                        </>\r\n                )\r\n\r\n            })\r\n            \r\n        }\r\n        </div>\r\n        </div>\r\n        <Pagination \r\n        showPerPage={showPerPage} \r\n        onPageChange={onPageChange}\r\n        total={user.length}\r\n        />\r\n        \r\n        </>\r\n    )}\r\n\r\n\r\nexport default Main\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from './Component/Main';\nconst App=()=>{\n  return (\n    <>\n    <Main/>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}